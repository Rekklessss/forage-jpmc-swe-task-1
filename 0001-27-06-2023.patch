From 559bfaf04ec3dadeb557c702b014f3cd38dd88c2 Mon Sep 17 00:00:00 2001
From: Divyanshu Pabia <thedivyanshupabia@gmail.com>
Date: Tue, 27 Jun 2023 16:37:58 +0530
Subject: [PATCH] 27/06/2023

---
 client3.py | 45 ++++++++++++++++++++++++---------------------
 1 file changed, 24 insertions(+), 21 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..23c83a3 100644
--- a/client3.py
+++ b/client3.py
@@ -30,30 +30,33 @@ N = 500
 
 
 def getDataPoint(quote):
-    """ Produce all the needed values to generate a datapoint """
-    """ ------------- Update this function ------------- """
-    stock = quote['stock']
-    bid_price = float(quote['top_bid']['price'])
-    ask_price = float(quote['top_ask']['price'])
-    price = bid_price
-    return stock, bid_price, ask_price, price
-
+	""" Produce all of the needed values to generate a datapoint """
+	""" ------------- Update this function ------------- """
+	stock = quote['stock']
+	bid_price = float(quote['top_bid']['price'])
+	ask_price = float(quote['top_ask']['price'])
+	price = (bid_price + ask_price)/2
+	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
-    """ Get ratio of price_a and price_b """
-    """ ------------- Update this function ------------- """
-    return 1
-
-
+	""" Get ratio of price_a and price_b """
+	""" ------------- Update this function ------------- """
+	""" Also create some unit tests for this function in client_test.py """
+	if (price_b == 0):
+			return 
+	return price_a/price_b
 # Main
 if __name__ == "__main__":
-    # Query the price once every N seconds.
-    for _ in iter(range(N)):
-        quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
-        """ ----------- Update to get the ratio --------------- """
-        for quote in quotes:
-            stock, bid_price, ask_price, price = getDataPoint(quote)
-            print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+	# Query the price once every N seconds.
+	for _ in range(N):
+		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+
+		""" ----------- Update to get the ratio --------------- """
+		prices = {}
+		for quote in quotes:
+			stock, bid_price, ask_price, price = getDataPoint(quote)
+			prices[stock] = price
+			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
+		print ("Ratio %s" % (getRatio(prices['ABC'], prices['DEF'])))
\ No newline at end of file
-- 
2.40.0

